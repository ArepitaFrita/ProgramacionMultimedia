// Generated by view binder compiler. Do not edit!
package com.p1.loginlayout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.p1.loginlayout.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText champDmg;

  @NonNull
  public final TextInputLayout champDmgInputlayout;

  @NonNull
  public final TextInputEditText champName;

  @NonNull
  public final TextInputLayout champNameInputlayout;

  @NonNull
  public final TextInputEditText champRelease;

  @NonNull
  public final TextInputLayout champReleaseInputlayout;

  @NonNull
  public final TextInputEditText champRole;

  @NonNull
  public final TextInputLayout champRoleInputlayout;

  @NonNull
  public final Button submitChampButton;

  private FragmentEditBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText champDmg, @NonNull TextInputLayout champDmgInputlayout,
      @NonNull TextInputEditText champName, @NonNull TextInputLayout champNameInputlayout,
      @NonNull TextInputEditText champRelease, @NonNull TextInputLayout champReleaseInputlayout,
      @NonNull TextInputEditText champRole, @NonNull TextInputLayout champRoleInputlayout,
      @NonNull Button submitChampButton) {
    this.rootView = rootView;
    this.champDmg = champDmg;
    this.champDmgInputlayout = champDmgInputlayout;
    this.champName = champName;
    this.champNameInputlayout = champNameInputlayout;
    this.champRelease = champRelease;
    this.champReleaseInputlayout = champReleaseInputlayout;
    this.champRole = champRole;
    this.champRoleInputlayout = champRoleInputlayout;
    this.submitChampButton = submitChampButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.champ_dmg;
      TextInputEditText champDmg = ViewBindings.findChildViewById(rootView, id);
      if (champDmg == null) {
        break missingId;
      }

      id = R.id.champ_dmg_inputlayout;
      TextInputLayout champDmgInputlayout = ViewBindings.findChildViewById(rootView, id);
      if (champDmgInputlayout == null) {
        break missingId;
      }

      id = R.id.champ_name;
      TextInputEditText champName = ViewBindings.findChildViewById(rootView, id);
      if (champName == null) {
        break missingId;
      }

      id = R.id.champ_name_inputlayout;
      TextInputLayout champNameInputlayout = ViewBindings.findChildViewById(rootView, id);
      if (champNameInputlayout == null) {
        break missingId;
      }

      id = R.id.champ_release;
      TextInputEditText champRelease = ViewBindings.findChildViewById(rootView, id);
      if (champRelease == null) {
        break missingId;
      }

      id = R.id.champ_release_inputlayout;
      TextInputLayout champReleaseInputlayout = ViewBindings.findChildViewById(rootView, id);
      if (champReleaseInputlayout == null) {
        break missingId;
      }

      id = R.id.champ_role;
      TextInputEditText champRole = ViewBindings.findChildViewById(rootView, id);
      if (champRole == null) {
        break missingId;
      }

      id = R.id.champ_role_inputlayout;
      TextInputLayout champRoleInputlayout = ViewBindings.findChildViewById(rootView, id);
      if (champRoleInputlayout == null) {
        break missingId;
      }

      id = R.id.submit_champ_button;
      Button submitChampButton = ViewBindings.findChildViewById(rootView, id);
      if (submitChampButton == null) {
        break missingId;
      }

      return new FragmentEditBinding((ConstraintLayout) rootView, champDmg, champDmgInputlayout,
          champName, champNameInputlayout, champRelease, champReleaseInputlayout, champRole,
          champRoleInputlayout, submitChampButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
